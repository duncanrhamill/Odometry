\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/*}
\PYG{c+cm}{ *  Line class \PYGZhy{} drives a straight leg of the course}
\PYG{c+cm}{ */}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}defines.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}encoderInteraction.cpp\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}Leg.cpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}Arduino.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}Wire.h\PYGZgt{}}

\PYG{c+c1}{// include guard}
\PYG{c+cp}{\PYGZsh{}ifndef LINE\PYGZus{}CPP}
\PYG{c+cp}{\PYGZsh{}define LINE\PYGZus{}CPP}

\PYG{k}{class} \PYG{n+nc}{Line}\PYG{o}{:} \PYG{k}{public} \PYG{n}{Leg} \PYG{p}{\PYGZob{}}
    \PYG{c+c1}{// count how many times we loop over the drive sections, so we don\PYGZsq{}t get stuck.}
    \PYG{k+kt}{int} \PYG{n}{loopCount}\PYG{p}{;}
  \PYG{k}{public}\PYG{o}{:}
    \PYG{c+c1}{// distance to travel, and how far to rotate to be pointing in correct direction at end of the leg}
    \PYG{k+kt}{int} \PYG{n}{dist}\PYG{p}{,} \PYG{n}{endRot}\PYG{p}{;}

    \PYG{c+c1}{// constructor}
    \PYG{n}{Line}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{dir}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{r}\PYG{p}{,} \PYG{k+kt}{bool} \PYG{n}{m}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{dist} \PYG{o}{=} \PYG{n}{d}\PYG{p}{;}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{direction} \PYG{o}{=} \PYG{n}{dir}\PYG{p}{;}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{endRot} \PYG{o}{=} \PYG{n}{r}\PYG{p}{;}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{drop} \PYG{o}{=} \PYG{n}{m}\PYG{p}{;}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{loopCount} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// implement the run function}
    \PYG{k+kt}{void} \PYG{n}{run}\PYG{p}{()} \PYG{p}{\PYGZob{}}
       
        \PYG{c+c1}{// run drive, get how far we actually drove}
        \PYG{k+kt}{int} \PYG{n}{driven} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{drive}\PYG{p}{(}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{direction} \PYG{o}{*} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{dist}\PYG{p}{,} \PYG{n+nb}{false}\PYG{p}{);}

        \PYG{c+c1}{// calculate distance left to drive}
        \PYG{k+kt}{int} \PYG{n}{shortfall} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{dist} \PYG{o}{\PYGZhy{}} \PYG{n}{driven}\PYG{p}{;}

        \PYG{c+c1}{// aim to get within 2mm of the target waypoint, without going over MAXLOOPCOUNT}
        \PYG{k}{while} \PYG{p}{(}\PYG{n}{abs}\PYG{p}{(}\PYG{n}{shortfall}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{n}{LINEARTOL} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{loopCount} \PYG{o}{\PYGZlt{}} \PYG{n}{MAXLOOPCOUNT}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{c+c1}{// if we aren\PYGZsq{}t on target, drive the shortfall again, looping over to check we reached it}
            \PYG{n}{driven} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{drive}\PYG{p}{(}\PYG{n}{shortfall}\PYG{p}{,} \PYG{n+nb}{true}\PYG{p}{);}
            \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{stop}\PYG{p}{();}
            \PYG{n}{shortfall} \PYG{o}{=} \PYG{n}{abs}\PYG{p}{(}\PYG{n}{shortfall}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{n}{driven}\PYG{p}{;}
            \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{loopCount}\PYG{o}{++}\PYG{p}{;}
            
        \PYG{p}{\PYGZcb{}} 
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{loopCount} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

        \PYG{c+c1}{// now repeat this for rotation}
        \PYG{k+kt}{float} \PYG{n}{rotated} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rotate}\PYG{p}{(}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{endRot}\PYG{p}{,} \PYG{n+nb}{false}\PYG{p}{);}

        \PYG{k+kt}{float} \PYG{n}{rotShortfall} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{endRot} \PYG{o}{\PYGZhy{}} \PYG{n}{rotated}\PYG{p}{;}

        \PYG{k}{while} \PYG{p}{(}\PYG{n}{abs}\PYG{p}{(}\PYG{n}{rotShortfall}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{n}{ANGULARTOL} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{loopCount} \PYG{o}{\PYGZlt{}} \PYG{n}{MAXLOOPCOUNT}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Correcting rotation\PYGZdq{}}\PYG{p}{);}
            \PYG{n}{rotated} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{rotate}\PYG{p}{(}\PYG{n}{rotShortfall}\PYG{p}{,} \PYG{n+nb}{true}\PYG{p}{);}
            \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{stop}\PYG{p}{();}
            \PYG{n}{rotShortfall} \PYG{o}{=} \PYG{n}{abs}\PYG{p}{(}\PYG{n}{rotShortfall}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{n}{rotated}\PYG{p}{;}
            \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{loopCount}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{loopCount} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

        \PYG{c+c1}{// blink light, sound buzzer, and drop M\PYGZam{}M if needed}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{action}\PYG{p}{();}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// move the wheels the desired distance, and return the actual distance driven}
    \PYG{k+kt}{int} \PYG{n}{drive}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{d}\PYG{p}{,} \PYG{k+kt}{bool} \PYG{n}{correction}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Line \PYGZdq{}}\PYG{p}{);}

        \PYG{k}{if} \PYG{p}{(}\PYG{n}{d} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        
        \PYG{k}{while}\PYG{p}{(}\PYG{n}{averageDistance}\PYG{p}{()} \PYG{o}{\PYGZlt{}=} \PYG{n}{abs}\PYG{p}{(}\PYG{n}{d}\PYG{p}{))} \PYG{p}{\PYGZob{}}
            \PYG{k+kt}{int} \PYG{n}{spd}\PYG{p}{;}

            \PYG{c+c1}{// if in a correction, go slowly for more accuracy}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{correction}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{spd} \PYG{o}{=} \PYG{n}{DUALSPEED} \PYG{o}{*} \PYG{l+m+mf}{0.2}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
                \PYG{n}{spd} \PYG{o}{=} \PYG{n}{DUALSPEED}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}

            \PYG{c+c1}{// Set both wheels to spin at the same rate}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{MODE}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{MODEUNSIGNEDDUAL}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

            \PYG{c+c1}{// set the acceleration mode to fast}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{ACCEL}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{ACCELDEFAULT}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

            \PYG{c+c1}{// set the speed}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{SPEEDLEFT}\PYG{p}{);}
            
            \PYG{c+c1}{// if we\PYGZsq{}re given a negative distance, drive backwards}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{d} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{((}\PYG{k+kt}{char}\PYG{p}{)(}\PYG{l+m+mi}{128} \PYG{o}{\PYGZhy{}} \PYG{n}{spd}\PYG{p}{));}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
                \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{((}\PYG{k+kt}{char}\PYG{p}{)(}\PYG{l+m+mi}{128} \PYG{o}{+} \PYG{n}{spd}\PYG{p}{));}
            \PYG{p}{\PYGZcb{}}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{// return the read distance}
        \PYG{k+kt}{int} \PYG{n}{avg} \PYG{o}{=} \PYG{n}{averageDistance}\PYG{p}{();}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{n}{avg}\PYG{p}{);}
        \PYG{n}{resetEncoders}\PYG{p}{();}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{stop}\PYG{p}{();}
        \PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{50}\PYG{p}{);}
        \PYG{k}{return} \PYG{n}{avg}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{};}

\PYG{c+cp}{\PYGZsh{}endif}
\end{Verbatim}
