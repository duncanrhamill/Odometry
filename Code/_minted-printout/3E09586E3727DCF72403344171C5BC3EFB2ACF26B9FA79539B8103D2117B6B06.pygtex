\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/*}
\PYG{c+cm}{ *  Leg class \PYGZhy{} controls the robot for one \PYGZsq{}leg\PYGZsq{} (segment) of the course}
\PYG{c+cm}{ *              includes logic for the action, rotate, and stop functions}
\PYG{c+cm}{ */}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}defines.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}encoderInteraction.cpp\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}Arduino.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}Servo.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}Wire.h\PYGZgt{}}

\PYG{c+c1}{// include guard}
\PYG{c+cp}{\PYGZsh{}ifndef LEG\PYGZus{}CPP}
\PYG{c+cp}{\PYGZsh{}define LEG\PYGZus{}CPP}

\PYG{k}{class} \PYG{n+nc}{Leg}
\PYG{p}{\PYGZob{}}
  \PYG{k}{public}\PYG{o}{:}
    \PYG{c+c1}{// pointer to serveo position variable}
    \PYG{k+kt}{int}\PYG{o}{*} \PYG{n}{servoPosition}\PYG{p}{;}
    \PYG{n}{Servo}\PYG{o}{*} \PYG{n}{servo}\PYG{p}{;}

    \PYG{c+c1}{// Should we drop an M\PYGZam{}M?, leg finished successfully?}
    \PYG{k+kt}{bool} \PYG{n}{drop}\PYG{p}{,} \PYG{n}{direction}\PYG{p}{;}
    
    \PYG{c+c1}{// Virtual function that will be called to run this leg of the course.}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{run}\PYG{p}{();}

    \PYG{c+c1}{// perform actions at waypoint, including dropping M\PYGZam{}M if needed}
    \PYG{k+kt}{void} \PYG{n+nf}{action}\PYG{p}{()} \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{// turn on LED and buzzer}
        \PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{LEDPIN}\PYG{p}{,} \PYG{n}{HIGH}\PYG{p}{);}
        \PYG{n}{tone}\PYG{p}{(}\PYG{n}{PIEZOPIN}\PYG{p}{,} \PYG{n}{PIEZOFREQ}\PYG{p}{);}
        
        \PYG{c+c1}{// if need to drop M\PYGZam{}M, drop one, if not delay so we can see and hear buzzer}
        \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{drop}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{dispense}\PYG{p}{();} \PYG{p}{\PYGZcb{}}
        \PYG{k}{else} \PYG{p}{\PYGZob{}} \PYG{n}{delay}\PYG{p}{(}\PYG{n}{NOTIFYPAUSE}\PYG{p}{);} \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{// turn off led \PYGZam{} buzzer}
        \PYG{n}{digitalWrite}\PYG{p}{(}\PYG{n}{LEDPIN}\PYG{p}{,} \PYG{n}{LOW}\PYG{p}{);}
        \PYG{n}{noTone}\PYG{p}{(}\PYG{n}{PIEZOPIN}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// dispense an M\PYGZam{}M}
    \PYG{k+kt}{void} \PYG{n+nf}{dispense}\PYG{p}{()} \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{// increase servo position}
        \PYG{o}{*}\PYG{n}{servoPosition} \PYG{o}{+=} \PYG{n}{SERVOSTEP}\PYG{p}{;}

        \PYG{c+c1}{// make sure we don\PYGZsq{}t accidentally run through all positions}
        \PYG{k}{if} \PYG{p}{(}\PYG{o}{*}\PYG{n}{servoPosition} \PYG{o}{\PYGZgt{}=} \PYG{l+m+mi}{179}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{o}{*}\PYG{n}{servoPosition} \PYG{o}{=} \PYG{l+m+mi}{179}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        
        \PYG{c+c1}{// write the servo position and wait to ensure clean drop}
        \PYG{n}{servo}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{write}\PYG{p}{(}\PYG{o}{*}\PYG{n}{servoPosition}\PYG{p}{);}
        \PYG{n}{delay}\PYG{p}{(}\PYG{n}{SERVOPAUSE}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// rotate by the given angle (+ve clockwise), returning the actual angle rotated}
    \PYG{k+kt}{float} \PYG{n+nf}{rotate}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{t}\PYG{p}{,} \PYG{k+kt}{bool} \PYG{n}{correction}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Rotate \PYGZdq{}}\PYG{p}{);}

        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{t}\PYG{p}{);}

        \PYG{c+c1}{// find distance needed to rotate}
        \PYG{k+kt}{int} \PYG{n}{dist} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{)(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{PI} \PYG{o}{*} \PYG{n}{WHEELDIST} \PYG{o}{*} \PYG{p}{((}\PYG{k+kt}{float}\PYG{p}{)}\PYG{n}{abs}\PYG{p}{(}\PYG{n}{t}\PYG{p}{)} \PYG{o}{/} \PYG{p}{(}\PYG{k+kt}{float}\PYG{p}{)}\PYG{l+m+mi}{360}\PYG{p}{));}

        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{dist}\PYG{p}{);}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{);}

        \PYG{c+c1}{// speeds of each wheel}
        \PYG{k+kt}{int} \PYG{n}{leftWheel}\PYG{p}{,} \PYG{n}{rightWheel}\PYG{p}{,} \PYG{n}{rotateSpeed}\PYG{p}{;}

        \PYG{c+c1}{// if we\PYGZsq{}re in correction mode rotate slower}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{correction}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{rotateSpeed} \PYG{o}{=} \PYG{n}{DUALSPEED} \PYG{o}{*} \PYG{l+m+mf}{0.1}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{n}{rotateSpeed} \PYG{o}{=} \PYG{n}{DUALSPEED} \PYG{o}{*} \PYG{l+m+mf}{0.5}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{((}\PYG{k+kt}{int}\PYG{p}{)}\PYG{n}{rotateSpeed}\PYG{p}{);}

        \PYG{c+c1}{// set speeds of each wheel depending on direction (+ve \PYGZhy{}\PYGZgt{} left goes forwards)}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{t} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{leftWheel} \PYG{o}{=} \PYG{p}{(}\PYG{l+m+mi}{128} \PYG{o}{+} \PYG{n}{rotateSpeed}\PYG{p}{);}
            \PYG{n}{rightWheel} \PYG{o}{=} \PYG{p}{(}\PYG{l+m+mi}{128} \PYG{o}{\PYGZhy{}} \PYG{n}{rotateSpeed}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{n}{leftWheel} \PYG{o}{=} \PYG{l+m+mi}{128} \PYG{o}{\PYGZhy{}} \PYG{n}{rotateSpeed}\PYG{p}{;}
            \PYG{n}{rightWheel} \PYG{o}{=} \PYG{l+m+mi}{128} \PYG{o}{+} \PYG{n}{rotateSpeed}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{);}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{((}\PYG{k+kt}{int}\PYG{p}{)}\PYG{n}{leftWheel}\PYG{p}{);}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{);}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{((}\PYG{k+kt}{int}\PYG{p}{)}\PYG{n}{rightWheel}\PYG{p}{);}
        
        \PYG{c+c1}{// while we\PYGZsq{}ve not rotated less that the required distance}
        \PYG{k}{while} \PYG{p}{(}\PYG{n}{averageDistance}\PYG{p}{()} \PYG{o}{\PYGZlt{}=} \PYG{n}{dist}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{c+c1}{// set wheels to spin at different speeds}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{MODE}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{MODESEPERATE}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

            \PYG{c+c1}{// set the acceleration mode to fast}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{ACCEL}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{ACCELDEFAULT}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

            \PYG{c+c1}{// Set left wheel speed}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{SPEEDLEFT}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{((}\PYG{k+kt}{char}\PYG{p}{)}\PYG{n}{leftWheel}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

            \PYG{c+c1}{// set right wheel speed}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{SPEEDRIGHT}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{((}\PYG{k+kt}{char}\PYG{p}{)}\PYG{n}{rightWheel}\PYG{p}{);}
            \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}

        \PYG{k+kt}{long} \PYG{n}{avg} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{long}\PYG{p}{)}\PYG{n}{averageDistance}\PYG{p}{();}

        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{avg}\PYG{p}{);}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{);}
        
        \PYG{k+kt}{float} \PYG{n}{ang} \PYG{o}{=} \PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{)((}\PYG{k+kt}{float}\PYG{p}{)(}\PYG{l+m+mi}{360} \PYG{o}{*} \PYG{n}{avg}\PYG{p}{)}\PYG{o}{/}\PYG{p}{((}\PYG{k+kt}{float}\PYG{p}{)(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{PI} \PYG{o}{*} \PYG{n}{WHEELDIST}\PYG{p}{)));}

        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{n}{ang}\PYG{p}{);}
        \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{);}

        \PYG{n}{resetEncoders}\PYG{p}{();}
        \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{stop}\PYG{p}{();}
        \PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{50}\PYG{p}{);}
        \PYG{k}{return} \PYG{n}{ang}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// stop the vehicle}
    \PYG{k+kt}{void} \PYG{n+nf}{stop}\PYG{p}{()} \PYG{p}{\PYGZob{}}
        \PYG{c+c1}{// allow both registers to be set to stop}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{MODE}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{MODESEPERATE}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

        \PYG{c+c1}{// high acceleration mode}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{ACCEL}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{l+m+mi}{10}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}

        \PYG{c+c1}{// set left to stop}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{SPEEDLEFT}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{l+m+mi}{128}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}
        
        \PYG{c+c1}{// set right to stop}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{beginTransmission}\PYG{p}{(}\PYG{n}{MD25ADDR}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{n}{SPEEDRIGHT}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{write}\PYG{p}{(}\PYG{l+m+mi}{128}\PYG{p}{);}
        \PYG{n}{Wire}\PYG{p}{.}\PYG{n}{endTransmission}\PYG{p}{();}
        \PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{50}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{};}

\PYG{c+cp}{\PYGZsh{}endif}
\end{Verbatim}
